/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.r3chain.data.api.models

import io.r3chain.data.api.models.EnumCapacityUnit
import io.r3chain.data.api.models.EnumCollectionType
import io.r3chain.data.api.models.EnumFacilityProcessingMethod
import io.r3chain.data.api.models.EnumFacilityProcessingType
import io.r3chain.data.api.models.EnumFacilityState
import io.r3chain.data.api.models.EnumFacilityType
import io.r3chain.data.api.models.EnumPlasticType
import io.r3chain.data.api.models.KeyValuePairDto

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param name 
 * @param type 
 * @param state 
 * @param locationID 
 * @param customTags 
 * @param resourceIDList 
 * @param inboundWasteTypeList 
 * @param outboundWasteTypeList 
 * @param capacity 
 * @param capacityUnit 
 * @param uiId 
 * @param certificateValidityAt 
 * @param certificateResourceID 
 * @param collectionType 
 * @param collectionSource 
 * @param processingType 
 * @param processingMethod 
 * @param processingForm 
 * @param deliveryToFacilityID 
 * @param deliveryToPartnerID 
 */


data class FacilityDto (

    @Json(name = "id")
    val id: kotlin.Int,

    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "type")
    val type: EnumFacilityType,

    @Json(name = "state")
    val state: EnumFacilityState,

    @Json(name = "locationID")
    val locationID: kotlin.Int,

    @Json(name = "customTags")
    val customTags: kotlin.collections.List<KeyValuePairDto>,

    @Json(name = "resourceIDList")
    val resourceIDList: kotlin.collections.List<kotlin.Int>,

    @Json(name = "inboundWasteTypeList")
    val inboundWasteTypeList: kotlin.collections.List<EnumPlasticType>,

    @Json(name = "outboundWasteTypeList")
    val outboundWasteTypeList: kotlin.collections.List<EnumPlasticType>,

    @Json(name = "capacity")
    val capacity: kotlin.Double,

    @Json(name = "capacityUnit")
    val capacityUnit: EnumCapacityUnit,

    @Json(name = "ui_id")
    val uiId: kotlin.String? = null,

    @Json(name = "certificateValidityAt")
    val certificateValidityAt: java.time.OffsetDateTime? = null,

    @Json(name = "certificateResourceID")
    val certificateResourceID: kotlin.Int? = null,

    @Json(name = "collectionType")
    val collectionType: EnumCollectionType? = null,

    @Json(name = "collectionSource")
    val collectionSource: kotlin.String? = null,

    @Json(name = "processingType")
    val processingType: EnumFacilityProcessingType? = null,

    @Json(name = "processingMethod")
    val processingMethod: EnumFacilityProcessingMethod? = null,

    @Json(name = "processingForm")
    val processingForm: kotlin.collections.List<EnumPlasticType>? = null,

    @Json(name = "deliveryToFacilityID")
    val deliveryToFacilityID: kotlin.Int? = null,

    @Json(name = "deliveryToPartnerID")
    val deliveryToPartnerID: kotlin.Int? = null

)

